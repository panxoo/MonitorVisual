// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ViewMonitor.Data;

namespace ViewMonitor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ViewMonitor.Models.Agrupacion", b =>
                {
                    b.Property<int>("AgrupacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("AgrupacionID");

                    b.ToTable("Agrupacions");
                });

            modelBuilder.Entity("ViewMonitor.Models.Job_Monitor", b =>
                {
                    b.Property<int>("Job_MonitorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("Job_MonitorID");

                    b.ToTable("Job_Monitors");
                });

            modelBuilder.Entity("ViewMonitor.Models.Monitor", b =>
                {
                    b.Property<int>("MonitorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("AgrupacionID")
                        .HasColumnType("int");

                    b.Property<bool>("Alerta")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(5000);

                    b.Property<int>("Job_MonitorID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Procedimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("MonitorID");

                    b.HasIndex("AgrupacionID");

                    b.HasIndex("Job_MonitorID");

                    b.ToTable("Monitors");
                });

            modelBuilder.Entity("ViewMonitor.Models.Monitor_Estado", b =>
                {
                    b.Property<int>("Monitor_EstadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonitorID")
                        .HasColumnType("int");

                    b.HasKey("Monitor_EstadoID");

                    b.HasIndex("MonitorID")
                        .IsUnique();

                    b.ToTable("Monitor_Estados");
                });

            modelBuilder.Entity("ViewMonitor.Models.Monitor_Estado_Hist", b =>
                {
                    b.Property<int>("Monitor_Estado_HistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonitorID")
                        .HasColumnType("int");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.HasKey("Monitor_Estado_HistID");

                    b.HasIndex("MonitorID");

                    b.ToTable("Monitor_Estado_Hists");
                });

            modelBuilder.Entity("ViewMonitor.Models.Monitor", b =>
                {
                    b.HasOne("ViewMonitor.Models.Agrupacion", "Agrupacion")
                        .WithMany("Monitors")
                        .HasForeignKey("AgrupacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViewMonitor.Models.Job_Monitor", "Job_Monitor")
                        .WithMany("Monitors")
                        .HasForeignKey("Job_MonitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ViewMonitor.Models.Monitor_Estado", b =>
                {
                    b.HasOne("ViewMonitor.Models.Monitor", "Monitor")
                        .WithOne("Monitor_Estado")
                        .HasForeignKey("ViewMonitor.Models.Monitor_Estado", "MonitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ViewMonitor.Models.Monitor_Estado_Hist", b =>
                {
                    b.HasOne("ViewMonitor.Models.Monitor", "Monitor")
                        .WithMany("Monitor_Estado_Hists")
                        .HasForeignKey("MonitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
