@model MonitorVisualInput

@{
ViewData["Title"] = "MonitoreoVisual";
Layout = "~/Views/Shared/_Layout.cshtml";
}


<form id="FormMonitDet" method="post">
    <div class="modal fade" id="MonitorDetalle" tabindex="-1" role="dialog" aria-labelledby="MonitorDetalle" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Monitor: <label id="lblNomMon"></label></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="MonitorDetallePartial">
                        <partial name="Shared/_MonitoreVisualDetalle" model="@Model.MonitorEstadoDt" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" id="btnCancelDet">Cerrar</button>
                    <button type="submit" class="btn btn-success"  id="btnProcedimient" data-moni="">Ejecutar Revision</button>

                </div>
            </div>
        </div>
    </div>
</form>

<section class="page-content container-fluid">
   <div id="MonitoresPart">
            <partial name="Shared/_MonitoreoVisualMonitor" model="@Model" />
    </div>
    
</section>


@section Scripts{

<script type="text/javascript">
    $(document).ready(function () {

       RevisionAlarma();
       reloadTime = localStorage.getItem('Monitor-Reload');
       reloadMonitor = setInterval(CallAlarma,reloadTime * 60000);
    });

    var reloadMonitor;
    var reloadTime;

    function RevisionAlarma(){

        let not =  localStorage.getItem('Monitor-Notifica')
        if(not == "off")
        {
            return;
        }

        if (Notification) {
            if (Notification.permission !== "granted") {
                Notification.requestPermission()
            }
        }

        let i = 0;

        $.each($(".monitoresLi"), function () {

            if ($(this).data('estado') != "True" && $(this).data('alarma') == "True") {
                i++;
            }
        });

        if (i > 0) {
            Alarma(i);
        }
    }

    function Alarma(cant) {

        if (Notification) {

            var title = "Sistema Monitoreo Apeseg"
            var extra = {
                icon: "../img/web-analytics.png",
                body: "Se encuentran " + cant + " casos en alerta"
            }
            var noti = new Notification(title, extra)
            noti.onclick = {
                // Al hacer click
            }
            noti.onclose = {
                // Al cerrar
            }

            setTimeout(function () {noti.close()}, 10000);
        }
    }

    function CallAlarma()
    {
        let post = new AjaxSubmit('@Url.Action("MonitoreoVisualCall", "SistemaMonitoreo")', "", "Error en obtener datos");
        post.partial = "#MonitoresPart";
    
        post.AjaxMonitor();   
       
    }

    function DetalleMonitor(e) {

        $("#MonitorDetalle").modal({
            keyboard: true,
            backdrop: "static"
        });

        $("#btnProcedimient").data("moni",$(e).data("id"));
        $("#lblNomMon").text($(e).data("nom"));

        let post = new AjaxSubmit('@Url.Action("MonitoreoVisualDetalle", "SistemaMonitoreo")', "", "Error en obtener datos");
        post.partial = "#MonitorDetallePartial";

        dt = {
            id: $(e).data("id")
        };
        post.AjaxPopOpen(dt);
    }

    $("#FormMonitDet").submit(function (e) {
        e.preventDefault();
        let post = new AjaxSubmit('@Url.Action("MonitoreoVisualExecJob", "SistemaMonitoreo")', "#btnProcedimient", "Error en obtener datos");
        post.partial = "#MonitoresPart"
        
        post.btnCancel = "#btnCancelDet"
        dt={id: $("#btnProcedimient").data("moni")};

        post.AjaxMonitor(dt);

    }); 

    $(".ItemReload").click(function(){ 
        let relaux = localStorage.getItem('Monitor-Reload');

        if(relaux == null || relaux == "")
        {
            relaux = 5;
            localStorage.setItem('Monitor-Reload',relaux);
        }

        if(relaux != reloadTime) 
        {
            clearInterval(reloadMonitor);
            reloadTime = relaux;
            reloadMonitor = setInterval(CallAlarma,reloadTime * 60000);
        }
    });



</script>

}